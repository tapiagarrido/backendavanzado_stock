// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_URL")
}

model configuracion {
  id         Int       @id @default(autoincrement())
  parametro  String    @unique() @db.VarChar(50)
  valor      String?   @db.VarChar(200)
  created_at DateTime  @default(now()) @db.Timestamp()
  updated_at DateTime? @db.Timestamp()
  deleted_at DateTime? @db.Timestamp()
}

model usuarios {
  id               String             @id @db.VarChar(50)
  alias            String             @db.VarChar(20)
  nombre_completo  String             @db.VarChar(100)
  email            String             @unique() @db.VarChar(100)
  contrasena       String             @db.VarChar()
  telefono         String             @db.VarChar(20)
  activo           Boolean            @default(false)
  rol              rol?               @relation(fields: [rol_id], references: [id])
  rol_id           Int?
  created_at       DateTime           @default(now()) @db.Timestamp()
  updated_at       DateTime?          @db.Timestamp()
  deleted_at       DateTime?          @db.Timestamp()
  maestra_articulo maestra_articulo[]
  categoria        categoria[]
  tipo             tipo[]
  linea            linea[]
  imagen_perfil    String?            @db.VarChar()
  stock_detalle    stock_detalle[]
}

model rol {
  id          Int        @id @default(autoincrement())
  nombre      String     @db.VarChar(30)
  descripcion String     @db.VarChar(100)
  usuarios    usuarios[]
}

model maestra_articulo {
  id                     Int                 @id @default(autoincrement())
  nombre                 String              @db.VarChar(100)
  codigo_barra           String              @db.VarChar(20)
  marca                  String              @db.VarChar(100)
  descripcion            String              @db.VarChar(300)
  valor                  Int                 @default(0)
  usuario                usuarios            @relation(fields: [usuario_id], references: [id])
  usuario_id             String              @db.VarChar()
  categoria              categoria?          @relation(fields: [categoria_id], references: [id])
  categoria_id           Int?
  tipo                   tipo                @relation(fields: [tipo_id], references: [id])
  tipo_id                Int
  linea                  linea               @relation(fields: [linea_id], references: [id])
  linea_id               Int
  local                  local               @relation(fields: [local_id], references: [id])
  local_id               Int
  unidad_medida_venta    unidad_medida_venta @relation(fields: [unidad_medida_venta_id], references: [id])
  unidad_medida_venta_id Int
  created_at             DateTime            @default(now()) @db.Timestamp()
  updated_at             DateTime?           @db.Timestamp()
  deleted_at             DateTime?           @db.Timestamp()
  stock                  stock[]
}

model categoria {
  id               Int                @id @default(autoincrement())
  nombre           String             @db.VarChar(50)
  descripcion      String?            @db.VarChar(300)
  usuario          usuarios           @relation(fields: [usuario_id], references: [id])
  usuario_id       String
  maestra_articulo maestra_articulo[]
  created_at       DateTime           @default(now()) @db.Timestamp()
}

model tipo {
  id               Int                @id @default(autoincrement())
  nombre           String             @db.VarChar(50)
  descripcion      String?            @db.VarChar(300)
  usuario          usuarios           @relation(fields: [usuario_id], references: [id])
  usuario_id       String
  maestra_articulo maestra_articulo[]
  created_at       DateTime           @default(now()) @db.Timestamp()
}

model linea {
  id               Int                @id @default(autoincrement())
  nombre           String             @db.VarChar(50)
  descripcion      String?            @db.VarChar(300)
  usuario          usuarios           @relation(fields: [usuario_id], references: [id])
  usuario_id       String
  maestra_articulo maestra_articulo[]
  created_at       DateTime           @default(now()) @db.Timestamp()
}

model local {
  id               Int                @id @default(autoincrement())
  nombre           String             @db.VarChar(50)
  descripcion      String?            @db.VarChar(300)
  maestra_articulo maestra_articulo[]
  created_at       DateTime           @default(now()) @db.Timestamp()
}

model unidad_medida_venta {
  id               Int                @id @default(autoincrement())
  nombre           String             @db.VarChar(50)
  maestra_articulo maestra_articulo[]
  created_at       DateTime           @default(now()) @db.Timestamp()
}

model stock {
  id                  Int              @id @default(autoincrement())
  maestra_articulo    maestra_articulo @relation(fields: [maestra_articulo_id], references: [id])
  maestra_articulo_id Int
  cantidad_total      Int              @default(0) @db.Integer()
  cantidad_ideal      Int              @default(0) @db.Integer()
  cantidad_minima     Int              @default(0) @db.Integer()
  stock_detalle       stock_detalle[]
}

model stock_detalle {
  id                 Int       @id @default(autoincrement())
  stock              stock     @relation(fields: [stock_id], references: [id])
  stock_id           Int       @db.Integer()
  usuario            usuarios  @relation(fields: [usuario_id], references: [id])
  usuario_id         String
  lote               String?   @db.VarChar()
  cantidad_ingresada Int       @db.Integer()
  cantidad_vendida   Int?      @default(0) @db.Integer()
  cantidad_merma     Int?      @default(0) @db.Integer()
  proveedor          String?   @db.VarChar()
  fecha_vencimiento  DateTime? @db.Timestamp()
  fecha_ingreso      DateTime  @default(now()) @db.Timestamp()
  precio_compra      Int?      @db.Integer()
  observacion        String?   @db.VarChar()
}
